
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">

    <title>Welcome to PythonOnWheels</title>

    <!-- Bootstrap core CSS -->
    <!--link href="../../dist/css/bootstrap.min.css" rel="stylesheet"-->
    <link href="{{ static_url("css/bootstrap.min.css") }}" rel="stylesheet">
    <!-- Custom styles for this template -->
    <!--link href="sticky-footer-navbar.css" rel="stylesheet"-->
    <!--link href="{{ static_url("css/sticky-footer-navbar.css") }}" rel="stylesheet"-->
    
    <link href="{{ static_url("css/justified-nav.css") }}" rel="stylesheet">
    <link href="{{ static_url("css/prism.css") }}" rel="stylesheet">
    {% block css %}
      
    {% end %}

    {% block js %}
      
    {% end %}
  </head>

  <body>

   <div class="container" >

      <!-- The justified navigation menu is meant for single line per list item.
           Multiple lines will require custom code not provided by Bootstrap. -->
      

      <!-- Jumbotron -->
      <div class="jumbotron">
        <img src={{ static_url("images/pow_logo_300.png") }}  style="display: inline-block;" />
           <hr>
        <p class="lead">The quick and simple generative Webframework for python.</p>
        <p><a class="btn btn-lg btn-success" href="#" role="button">Get started today</a></p>
      </div>
      <!-- START THE FEATURETTES -->

      <!--hr class="featurette-divider" -->
      <div class="row featurette">
        <div class="col-md-2">
          &nbsp;
        </div>
        <div class="col-md-8">
             <h2 class="featurette-heading">Everything you need on board <span class="text-muted">Batteries included.</span></h2>
                <p class="lead">
                  With PythonOnWheels you need no extra tools to start. Everything from DB to Webserver and template engine is included.
                  But you are not forced to use them and can go raw or include your own tools whenever you want.
                </p>
                 
                <h3> Based on a very Strong foundation: </h3>
                <ul>
                <li>python 3.x</li>
                <li>tornado webserver</li>
                <li>sqlalchemy ORM</li>
                <li>cerberus schemas and validation on board</li>
                <li>react.js views</li>
                <li>tornado templates</li>
                </ul>
        </div>
        <div class="col-md-2">
          &nbsp;
        </div>
      </div>
      <div class="row featurette">
        <div class="col-md-2">
          &nbsp;
        </div>
        <div class="col-md-8">
            <hr class="featurette-divider">
              <h2 class="featurette-heading">Probably the most simple SQL relations and RESTrouting out there! <span class="text-muted"> (Flask like routing included as well) .</span></h2>
                <p class="lead">
                  With PythonOnWheels you simply add a class decorator like <code>@relation.has_many("comments") </code> to the Post model and every Post can have comments. It will 
                  be automatically mapped to the DB (SQLite, Postgres, MySQL, MariaDb, Oracle, MSSQL ...) and to all Models.
                  Additionally you can set RESTroutes by simply add the class decorator: <code>@app.add_rest_routes("post") </code>to add all the typical RESTroutes for the Post model.
                </p>
                <pre><code class="language-python">
                    @relation.has_many("comments")
                    @relation.setup_schema()
                    class Post(Base):
                          #
                          # Schema definition with the new (cerberus) schema style 
                          # which offer you immediate validation 
                          #
                          schema = {
                              # string sqltypes can be TEXT or UNICODE or nothing
                              'author': {'type': 'string', 'maxlength' : 35},
                              'title': {'type': 'string'},
                              'text': {'type': 'string'}
                          }

                          # init
                          def __init__(self, **kwargs):
                              self.init_on_load(**kwargs)

                          # your methods down here


                </code></pre>
          </div>
          <div class="col-md-2">
          &nbsp;
          </div>
      </div>

      <hr class="featurette-divider">

      <div class="row featurette">
        <div class="col-md-7">
          <h2 class="featurette-heading">And lastly, this one. <span class="text-muted">Checkmate.</span></h2>
          <p class="lead">Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod semper. Praesent commodo cursus magna, vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus commodo.</p>
        </div>
        <div class="col-md-5">
          <h3>Super easy, quick to start and all the basics on board:</h3>
          </ul>
          <li>super easy relations with decorators @relations.has_many("comments")</li>
          <li>super easy REST routing with decorators @app.add\_restful\_routes(), </li>
          <li>routing decorator @app.add_route(route)</li>
          <li>db migrations autogenerated usin alembic in the back </li>
          <li>validation on board with cerberus schemas</li>
          <li>automatic scaffolding views</li>
          <li>generate_models script</li>
          <li>generate_migrations script </li>
          <li>update_db script</li>
          <li>generate_handlers </li>
          <li>generate_app</li>
          </ul>
          <img class="featurette-image img-fluid mx-auto" data-src="holder.js/500x500/auto" alt="Generic placeholder image">
        </div>
      </div>

      <hr class="featurette-divider">

      <!-- /END THE FEATURETTES -->
      

      <!-- Example row of columns -->
      <div class="row">
        <div class="col-lg-4">
          <h2>Safari bug warning!</h2>
          <p class="text-danger">As of v9.0, Safari exhibits a bug in which resizing your browser horizontally causes rendering errors in the justified nav that are cleared upon refreshing.</p>
          <p>Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. </p>
          <p><a class="btn btn-primary" href="#" role="button">View details &raquo;</a></p>
        </div>
        <div class="col-lg-4">
          <h2>Heading</h2>
          <p>Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. </p>
          <p><a class="btn btn-primary" href="#" role="button">View details &raquo;</a></p>
       </div>
        <div class="col-lg-4">
          <h2>Heading</h2>
          <p>Donec sed odio dui. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Vestibulum id ligula porta felis euismod semper. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.</p>
          <p><a class="btn btn-primary" href="#" role="button">View details &raquo;</a></p>

        </div>
      </div>
      
      <!-- Site footer -->
      {% include "footer.tmpl" %}

    </div> <!-- /container -->


  </body>
</html>
